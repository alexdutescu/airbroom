// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ro.alex.client.managed.activity;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.Receiver;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import ro.alex.client.managed.activity.RezervareEditActivityWrapper.View;
import ro.alex.client.managed.request.ApplicationRequestFactory;
import ro.alex.client.managed.ui.RezervareEditView;
import ro.alex.client.proxy.LocProxy;
import ro.alex.client.proxy.PersoanaProxy;
import ro.alex.client.proxy.RezervareProxy;
import ro.alex.client.proxy.ZborProxy;
import ro.alex.client.scaffold.activity.IsScaffoldMobileActivity;
import ro.alex.client.scaffold.place.ProxyEditView;
import ro.alex.client.scaffold.place.ProxyListPlace;
import ro.alex.client.scaffold.place.ProxyPlace;

public abstract class RezervareEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setLocDusPickerValues(Collections.<LocProxy>emptyList());
        requests.locRequest().findLocEntries(0, 50).with(ro.alex.client.managed.ui.renderer.LocProxyRenderer.instance().getPaths()).fire(new Receiver<List<LocProxy>>() {

            public void onSuccess(List<LocProxy> response) {
                List<LocProxy> values = new ArrayList<LocProxy>();
                values.add(null);
                values.addAll(response);
                view.setLocDusPickerValues(values);
            }
        });
        view.setLocIntorsPickerValues(Collections.<LocProxy>emptyList());
        requests.locRequest().findLocEntries(0, 50).with(ro.alex.client.managed.ui.renderer.LocProxyRenderer.instance().getPaths()).fire(new Receiver<List<LocProxy>>() {

            public void onSuccess(List<LocProxy> response) {
                List<LocProxy> values = new ArrayList<LocProxy>();
                values.add(null);
                values.addAll(response);
                view.setLocIntorsPickerValues(values);
            }
        });
        view.setZborDusPickerValues(Collections.<ZborProxy>emptyList());
        requests.zborRequest().findZborEntries(0, 50).with(ro.alex.client.managed.ui.renderer.ZborProxyRenderer.instance().getPaths()).fire(new Receiver<List<ZborProxy>>() {

            public void onSuccess(List<ZborProxy> response) {
                List<ZborProxy> values = new ArrayList<ZborProxy>();
                values.add(null);
                values.addAll(response);
                view.setZborDusPickerValues(values);
            }
        });
        view.setZborIntorsPickerValues(Collections.<ZborProxy>emptyList());
        requests.zborRequest().findZborEntries(0, 50).with(ro.alex.client.managed.ui.renderer.ZborProxyRenderer.instance().getPaths()).fire(new Receiver<List<ZborProxy>>() {

            public void onSuccess(List<ZborProxy> response) {
                List<ZborProxy> values = new ArrayList<ZborProxy>();
                values.add(null);
                values.addAll(response);
                view.setZborIntorsPickerValues(values);
            }
        });
        view.setPersoanaPickerValues(Collections.<PersoanaProxy>emptyList());
        requests.persoanaRequest().findPersoanaEntries(0, 50).with(ro.alex.client.managed.ui.renderer.PersoanaProxyRenderer.instance().getPaths()).fire(new Receiver<List<PersoanaProxy>>() {

            public void onSuccess(List<PersoanaProxy> response) {
                List<PersoanaProxy> values = new ArrayList<PersoanaProxy>();
                values.add(null);
                values.addAll(response);
                view.setPersoanaPickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }

    public interface View_Roo_Gwt<V extends ro.alex.client.managed.ui.RezervareEditView<V>> extends RezervareEditView<V> {

        void setLocDusPickerValues(Collection<LocProxy> values);

        void setLocIntorsPickerValues(Collection<LocProxy> values);

        void setZborDusPickerValues(Collection<ZborProxy> values);

        void setZborIntorsPickerValues(Collection<ZborProxy> values);

        void setPersoanaPickerValues(Collection<PersoanaProxy> values);
    }
}
